DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS compilations_events;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
user_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(254) NOT NULL UNIQUE,
  CONSTRAINT pk_user PRIMARY KEY (user_id)
);

CREATE TABLE categories (
category_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL UNIQUE,
  CONSTRAINT pk_category PRIMARY KEY (category_id)
);

CREATE TABLE events (
event_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  category_id INT REFERENCES categories(category_id) ON DELETE CASCADE,
  confirmed_requests INT,
  created_on TIMESTAMP NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date TIMESTAMP NOT NULL,
  initiator_id INT REFERENCES users(user_id) ON DELETE CASCADE,
  lat DOUBLE PRECISION NOT NULL,
  lon DOUBLE PRECISION NOT NULL,
  paid BOOLEAN NOT NULL,
  participant_limit INT NOT NULL,
  published_on TIMESTAMP,
  request_moderation BOOLEAN NOT NULL,
  state VARCHAR(20),
  title VARCHAR(120) NOT NULL,
  views INT,
  CONSTRAINT pk_event PRIMARY KEY (event_id)
);

CREATE TABLE compilations (
compilation_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  pinned BOOLEAN,
  title VARCHAR(50) NOT NULL UNIQUE,
  CONSTRAINT pk_compilation PRIMARY KEY (compilation_id)
);

CREATE TABLE compilations_events (
compilation_id INT NOT NULL REFERENCES compilations(compilation_id) ON DELETE CASCADE,
event_id INT NOT NULL REFERENCES events(event_id) ON DELETE CASCADE,
  CONSTRAINT pk_compilations_events PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE requests (
request_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  event_id INT NOT NULL REFERENCES events(event_id),
  created TIMESTAMP NOT NULL,
  requester_id INT NOT NULL REFERENCES users(user_id),
  status VARCHAR(20),
  CONSTRAINT pk_request PRIMARY KEY (request_id)
);

CREATE TABLE comments (
comment_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text VARCHAR(5000) NOT NULL,
  user_id INT NOT NULL REFERENCES users(user_id),
  event_id INT NOT NULL REFERENCES events(event_id) ON DELETE CASCADE,
  created_date TIMESTAMP NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (comment_id)
);